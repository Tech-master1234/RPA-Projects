<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="753,1161" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:uca="clr-namespace:UiPath.Cryptography.Activities;assembly=UiPath.Cryptography.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Cryptography</x:String>
      <x:String>UiPath.Cryptography.Enums</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Text</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Cryptography.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="672,6442" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="SelectedFilePath" />
      <Variable x:TypeArguments="x:String" Name="pass" />
      <Variable x:TypeArguments="x:String" Name="SelectedFilePath1" />
      <Variable x:TypeArguments="x:String" Name="choice" />
      <Variable x:TypeArguments="x:String" Name="foderpathenc" />
      <Variable x:TypeArguments="x:String" Name="filepath_open" />
      <Variable x:TypeArguments="x:String" Name="openfile" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[Not choice.Equals(&quot;Exit&quot;)]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="672,6371" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="638,6225" sap2010:WorkflowViewState.IdRef="Sequence_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Format" sap:VirtualizedContainerService.HintSize="604,6165" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InputDialog Options="{x:Null}" sap2010:Annotation.AnnotationText="Gets the prefered operation from the user" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="570,355" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Would you like to Encrypt or Decrypt ?" OptionsString="Encrypt;Decrypt;Exit" Title="Encrypt/Decrypt">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:String">[choice]</OutArgument>
              </ui:InputDialog.Result>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InputDialog>
            <ui:IfElseIfV2 Condition="[choice=&quot;Encrypt&quot;]" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="570,5727" sap2010:WorkflowViewState.IdRef="IfElseIfV2_1">
              <ui:IfElseIfV2.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,338" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,173" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Exiting&quot;]" />
                  <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[choice]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Exit</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ui:IfElseIfV2.Else>
              <ui:IfElseIfV2.ElseIfs>
                <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                  <ui:IfElseIfBlock BlockType="ElseIf" Condition="[choice=&quot;Decrypt&quot;]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_3">
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="536,2791" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="filepathdec" />
                          <Variable x:TypeArguments="x:String" Name="passdec" />
                          <Variable x:TypeArguments="x:String" Name="filepathenc" />
                          <Variable x:TypeArguments="x:String" Name="filepath_rename" />
                          <Variable x:TypeArguments="x:String" Name="folderpathdec" />
                          <Variable x:TypeArguments="x:Boolean" Name="folderexistdec" />
                          <Variable x:TypeArguments="x:String" Name="folderpathdec___Decrypted_Files_" />
                          <Variable x:TypeArguments="x:String" Name="finalopen" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SelectFile DisplayName="Browse For File" Filter="PDF|*.pdf" sap:VirtualizedContainerService.HintSize="502,170" sap2010:WorkflowViewState.IdRef="SelectFile_11" SelectedFile="[filepathdec]" />
                        <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="502,271" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="Enter Password to Decrypt" Title="Password">
                          <ui:InputDialog.Result>
                            <OutArgument x:TypeArguments="x:String">[passdec]</OutArgument>
                          </ui:InputDialog.Result>
                        </ui:InputDialog>
                        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="502,216" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                          <TryCatch.Try>
                            <uca:DecryptFile KeyEncoding="{x:Null}" KeySecureString="{x:Null}" OutputFileName="{x:Null}" OutputFilePath="{x:Null}" Algorithm="AESGCM" DisplayName="Decrypt File" FileInputModeSwitch="FilePath" sap:VirtualizedContainerService.HintSize="334,192" sap2010:WorkflowViewState.IdRef="DecryptFile_4" InputFilePath="[filepathdec]" Key="[passdec]" KeyEncodingString="65001" KeyInputModeSwitch="Key" Overwrite="False" />
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,85" sap2010:WorkflowViewState.IdRef="MessageBox_14" Text="[&quot;Enter Correct Password&quot;]" />
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                        <Assign sap:VirtualizedContainerService.HintSize="502,114" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[filepath_rename]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[filepathdec.Replace("_Encrypted.pdf", "_Encrypted_Decrypted.pdf").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="502,114" sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[filepath_open]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[filepath_rename.Replace("_Encrypted_Decrypted.pdf","_Decrypted.pdf").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:RenameFileX DisplayName="Rename File" FilePath="[filepath_rename]" sap:VirtualizedContainerService.HintSize="502,175" sap2010:WorkflowViewState.IdRef="RenameFileX_3" KeepExtension="False" NewName="[filepath_open]" />
                        <Assign sap:VirtualizedContainerService.HintSize="502,114" sap2010:WorkflowViewState.IdRef="Assign_11">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[folderpathdec]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.IO.Path.GetDirectoryName(filepathdec)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:FolderExistsX DisplayName="Folder Exists" Exists="[folderexistdec]" sap:VirtualizedContainerService.HintSize="502,165" sap2010:WorkflowViewState.IdRef="FolderExistsX_2" Path="[folderpathdec+&quot;\Decrypted Files&quot;]" />
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="502,173" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[folderpathdec]" />
                        <If Condition="[folderexistdec=False]" sap:VirtualizedContainerService.HintSize="502,994" sap2010:WorkflowViewState.IdRef="If_3">
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,468" sap2010:WorkflowViewState.IdRef="Sequence_22">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="g" />
                                <Variable x:TypeArguments="x:String" Name="moveEnc" />
                                <Variable x:TypeArguments="x:String" Name="moveDec" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[folderpathdec+&quot;\Decrypted Files&quot;]" />
                              <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_14">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[openfile]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[Path.GetFileName(filepath_open)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[folderpathdec+&quot;\Decrypted Files&quot;]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="MoveFile_4" Path="[filepath_open]" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,356" sap2010:WorkflowViewState.IdRef="Sequence_23">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="moveEnc" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_15">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[openfile]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[Path.GetFileName(filepath_open)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[folderpathdec+&quot;\Decrypted Files&quot;]" DisplayName="Move to a folder" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="MoveFile_5" Path="[filepath_open]" />
                            </Sequence>
                          </If.Else>
                        </If>
                        <Assign sap:VirtualizedContainerService.HintSize="502,114" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[finalopen]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[folderpathdec+"\Decrypted Files\"+openfile]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="[finalopen]" sap:VirtualizedContainerService.HintSize="502,111" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                </sc:BindingList>
              </ui:IfElseIfV2.ElseIfs>
              <ui:IfElseIfV2.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="536,2334" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="password" />
                    <Variable x:TypeArguments="x:String" Name="filepathenc" />
                    <Variable x:TypeArguments="x:Boolean" Name="folderenc" />
                    <Variable x:TypeArguments="x:Boolean" Name="folderexist" />
                    <Variable x:TypeArguments="x:String" Name="folderpathenc" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:SelectFile DisplayName="Browse For File" Filter="PDF|*.pdf" sap:VirtualizedContainerService.HintSize="502,170" sap2010:WorkflowViewState.IdRef="SelectFile_10" SelectedFile="[filepathenc]" />
                  <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="502,271" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Enter Password to encrypt" Title="Password">
                    <ui:InputDialog.Result>
                      <OutArgument x:TypeArguments="x:String">[password]</OutArgument>
                    </ui:InputDialog.Result>
                  </ui:InputDialog>
                  <uca:EncryptFile KeyEncoding="{x:Null}" KeySecureString="{x:Null}" OutputFileName="{x:Null}" OutputFilePath="{x:Null}" Algorithm="AESGCM" DisplayName="Encrypt File" FileInputModeSwitch="FilePath" sap:VirtualizedContainerService.HintSize="502,223" sap2010:WorkflowViewState.IdRef="EncryptFile_5" InputFilePath="[filepathenc]" Key="[password]" KeyEncodingString="65001" KeyInputModeSwitch="Key" Overwrite="False" />
                  <Assign sap:VirtualizedContainerService.HintSize="502,114" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[folderpathenc]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.IO.Path.GetDirectoryName(filepathenc)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:FolderExistsX DisplayName="Folder Exists" Exists="[folderexist]" sap:VirtualizedContainerService.HintSize="502,165" sap2010:WorkflowViewState.IdRef="FolderExistsX_1" Path="[folderpathenc+&quot;\Encrypted Files&quot;]" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="502,173" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[folderexist]" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="502,173" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[folderpathenc]" />
                  <If Condition="[folderexist=False]" sap:VirtualizedContainerService.HintSize="502,985" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,468" sap2010:WorkflowViewState.IdRef="Sequence_20">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="g" />
                          <Variable x:TypeArguments="x:String" Name="moveEnc" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[folderpathenc+&quot;\Encrypted Files&quot;]" />
                        <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[moveEnc]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[filepathenc.Replace(".pdf","_Encrypted.pdf")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[folderpathenc+&quot;\Encrypted Files&quot;]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="MoveFile_2" Path="[moveEnc]" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,356" sap2010:WorkflowViewState.IdRef="Sequence_21">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="moveEnc" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign the Encrypted File name with path" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[moveEnc]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[filepathenc.Replace(".pdf","_Encrypted.pdf")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[folderpathenc+&quot;\Encrypted Files&quot;]" DisplayName="Move to a folder" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="MoveFile_1" Path="[moveEnc]" />
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ui:IfElseIfV2.Then>
            </ui:IfElseIfV2>
          </Sequence>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
    </ui:InterruptibleDoWhile>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="672,48" sap2010:WorkflowViewState.IdRef="CommentOut_3">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="502,2092" sap2010:WorkflowViewState.IdRef="Sequence_14">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap:VirtualizedContainerService.HintSize="468,2032" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[pass]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">MASTER</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;key added&quot;]" />
            <ui:SelectFile DisplayName="Browse For File" Filter="PDF|*.pdf" sap:VirtualizedContainerService.HintSize="434,172" sap2010:WorkflowViewState.IdRef="SelectFile_8" SelectedFile="[SelectedFilePath]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,175" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;File Selected&quot;]" />
            <uca:EncryptFile KeyEncoding="{x:Null}" KeySecureString="{x:Null}" OutputFileName="{x:Null}" OutputFilePath="{x:Null}" Algorithm="AESGCM" DisplayName="Encrypt File" FileInputModeSwitch="FilePath" sap:VirtualizedContainerService.HintSize="434,226" sap2010:WorkflowViewState.IdRef="EncryptFile_4" InputFilePath="[SelectedFilePath]" Key="[pass]" KeyEncodingString="65001" KeyInputModeSwitch="Key" Overwrite="False" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,175" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;File Encrypted&quot;]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,175" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Decryption Started&quot;]" />
            <ui:SelectFile DisplayName="Browse For File" Filter="All files (*.*)|*.*" sap:VirtualizedContainerService.HintSize="434,172" sap2010:WorkflowViewState.IdRef="SelectFile_9" SelectedFile="[SelectedFilePath1]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,175" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;File Selected&quot;]" />
            <uca:DecryptFile KeyEncoding="{x:Null}" KeySecureString="{x:Null}" OutputFileName="{x:Null}" OutputFilePath="{x:Null}" Algorithm="AESGCM" DisplayName="Decrypt File" FileInputModeSwitch="FilePath" sap:VirtualizedContainerService.HintSize="434,226" sap2010:WorkflowViewState.IdRef="DecryptFile_3" InputFilePath="[SelectedFilePath1]" Key="[pass]" KeyEncodingString="65001" KeyInputModeSwitch="Key" Overwrite="False" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,166" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;File Decrypted&quot;]" />
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>